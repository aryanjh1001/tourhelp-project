version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tourhelp-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tourhelp_db
      POSTGRES_USER: tourhelp_user
      POSTGRES_PASSWORD: tourhelp_password_2024
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - tourhelp-network

  # Redis for caching (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: tourhelp-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tourhelp-network

  # TourHelp Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tourhelp-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://tourhelp_user:tourhelp_password_2024@postgres:5432/tourhelp_db
      - PORT=5000
    ports:
      - "5000:5000"
      - "5001:5001"  # WebSocket port
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - tourhelp-network

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: tourhelp-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - tourhelp-network

volumes:
  postgres_data:
  redis_data:

networks:
  tourhelp-network:
    driver: bridge